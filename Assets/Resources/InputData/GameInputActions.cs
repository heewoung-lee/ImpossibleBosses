//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Resources/InputData/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""8cbad867-ee8c-4fbd-83b3-e59065c82de4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""edb4b48e-2814-448f-bb6f-c8f307e78b40"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pointer"",
                    ""type"": ""Value"",
                    ""id"": ""c758e4d0-fb14-49ba-b32e-81f8c8d389bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""9b6f4fe5-bfee-406f-a587-564f8111869d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stop"",
                    ""type"": ""Button"",
                    ""id"": ""d09c296a-2d08-4dfc-8fe4-d845553394aa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""b45a50a6-ef88-4c48-865b-40deeead440e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a8bbe4a2-3e43-4111-ac16-f67ac5107007"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60c4d4c0-36ad-4d03-930a-e5e7ed9cdcd4"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a32f313-b1ee-4441-afe6-93a204ae248e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06f88b33-ebaf-490a-b3dd-fc9cc71bf2a6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d94bb7cd-b1ac-4d56-a235-6dc52f607d1c"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Camera"",
            ""id"": ""53282604-ce71-4ed4-ad41-fee79c563b9e"",
            ""actions"": [
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""22331e88-402d-4382-84d9-d052051a65c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""Clamp(min=-0.1,max=0.1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""0c1ba3bd-d762-4c38-b427-e1c64898269b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseScrollButton"",
                    ""type"": ""Button"",
                    ""id"": ""6dd1ba7d-937a-4140-99bb-e77f5a4056f9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""92244f71-e528-4c7b-9dd9-9cf7dbad27b3"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5278497-0391-4c73-8314-40800c913102"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=-100,y=100)"",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""019ed0b8-625c-426f-8b83-0551952ab519"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""DeltaTimeScale,ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13b255a8-67e1-4b00-b81a-daa1c064eefb"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScrollButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""63b76336-4aa7-4e64-8db0-656f1b2f3201"",
            ""actions"": [
                {
                    ""name"": ""Show_UI_Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""7b9aa023-efd0-433a-8c98-ea963530433a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumabar_GetKey1"",
                    ""type"": ""Button"",
                    ""id"": ""a3ff61d6-238d-4288-8ba8-031cd6cf7d37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumabar_GetKey2"",
                    ""type"": ""Button"",
                    ""id"": ""af9d923e-2bd2-4fa5-9bdd-1e3feb0564ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumabar_GetKey3"",
                    ""type"": ""Button"",
                    ""id"": ""0cd997c9-0f14-4862-be27-f894671b1a61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Consumabar_GetKey4"",
                    ""type"": ""Button"",
                    ""id"": ""64168a9b-0ff6-41fc-8fbf-01876a1a7b99"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close_Popup_UI"",
                    ""type"": ""Button"",
                    ""id"": ""4beedf42-98bc-4bd8-b6e6-e2c7b3a590bf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillBar_GetKeyQ"",
                    ""type"": ""Button"",
                    ""id"": ""bf4e1e81-b952-43be-872c-eeeb2d6a5ea0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillBar_GetKeyW"",
                    ""type"": ""Button"",
                    ""id"": ""3f3f6e1d-1910-4c17-b819-64652044502a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillBar_GetKeyE"",
                    ""type"": ""Button"",
                    ""id"": ""132fb82d-3287-45d5-9458-7153085d8a48"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkillBar_GetKeyR"",
                    ""type"": ""Button"",
                    ""id"": ""bb876110-1883-4aa0-b2be-656932f183e6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ID_PW_Popup_TabKey"",
                    ""type"": ""Button"",
                    ""id"": ""4824f36a-58cc-462f-8f62-af512c28fd0f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f81a11ef-5e89-42fb-b299-20a878919d79"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Show_UI_Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d5ca8b0-a5da-4c10-9714-9f82ae8426fb"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumabar_GetKey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4533c6b9-44f7-41c6-bf2b-e6d9ead44176"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumabar_GetKey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30d75649-2292-4bb0-b42e-4c08743f99f7"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumabar_GetKey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""584dcc91-aad7-45e9-8714-be51c59c14be"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Consumabar_GetKey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35a03661-3bb5-4c16-ac7e-bd44ee2e411b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close_Popup_UI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c94a4249-0fbe-4d18-a83b-905eaa7e4dfe"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillBar_GetKeyQ"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea9ef6a2-b438-48e0-a4d2-8b091edea0dd"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillBar_GetKeyW"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c2b68d6-b3aa-4936-94b6-aa83541f5d2a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillBar_GetKeyE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""105a04ae-f606-4bca-bb7b-d21dc8362e88"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkillBar_GetKeyR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6147314c-e017-4fc3-8804-bcadd33790d7"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ID_PW_Popup_TabKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Pointer = m_Player.FindAction("Pointer", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_Stop = m_Player.FindAction("Stop", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Scroll = m_Camera.FindAction("Scroll", throwIfNotFound: true);
        m_Camera_Look = m_Camera.FindAction("Look", throwIfNotFound: true);
        m_Camera_MouseScrollButton = m_Camera.FindAction("MouseScrollButton", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Show_UI_Inventory = m_UI.FindAction("Show_UI_Inventory", throwIfNotFound: true);
        m_UI_Consumabar_GetKey1 = m_UI.FindAction("Consumabar_GetKey1", throwIfNotFound: true);
        m_UI_Consumabar_GetKey2 = m_UI.FindAction("Consumabar_GetKey2", throwIfNotFound: true);
        m_UI_Consumabar_GetKey3 = m_UI.FindAction("Consumabar_GetKey3", throwIfNotFound: true);
        m_UI_Consumabar_GetKey4 = m_UI.FindAction("Consumabar_GetKey4", throwIfNotFound: true);
        m_UI_Close_Popup_UI = m_UI.FindAction("Close_Popup_UI", throwIfNotFound: true);
        m_UI_SkillBar_GetKeyQ = m_UI.FindAction("SkillBar_GetKeyQ", throwIfNotFound: true);
        m_UI_SkillBar_GetKeyW = m_UI.FindAction("SkillBar_GetKeyW", throwIfNotFound: true);
        m_UI_SkillBar_GetKeyE = m_UI.FindAction("SkillBar_GetKeyE", throwIfNotFound: true);
        m_UI_SkillBar_GetKeyR = m_UI.FindAction("SkillBar_GetKeyR", throwIfNotFound: true);
        m_UI_ID_PW_Popup_TabKey = m_UI.FindAction("ID_PW_Popup_TabKey", throwIfNotFound: true);
    }

    ~@GameInputActions()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, GameInputActions.Player.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Camera.enabled, "This will cause a leak and performance issues, GameInputActions.Camera.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, GameInputActions.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Pointer;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_Stop;
    private readonly InputAction m_Player_Interaction;
    public struct PlayerActions
    {
        private @GameInputActions m_Wrapper;
        public PlayerActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Pointer => m_Wrapper.m_Player_Pointer;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @Stop => m_Wrapper.m_Player_Stop;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Pointer.started += instance.OnPointer;
            @Pointer.performed += instance.OnPointer;
            @Pointer.canceled += instance.OnPointer;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Stop.started += instance.OnStop;
            @Stop.performed += instance.OnStop;
            @Stop.canceled += instance.OnStop;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Pointer.started -= instance.OnPointer;
            @Pointer.performed -= instance.OnPointer;
            @Pointer.canceled -= instance.OnPointer;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Stop.started -= instance.OnStop;
            @Stop.performed -= instance.OnStop;
            @Stop.canceled -= instance.OnStop;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_Scroll;
    private readonly InputAction m_Camera_Look;
    private readonly InputAction m_Camera_MouseScrollButton;
    public struct CameraActions
    {
        private @GameInputActions m_Wrapper;
        public CameraActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Scroll => m_Wrapper.m_Camera_Scroll;
        public InputAction @Look => m_Wrapper.m_Camera_Look;
        public InputAction @MouseScrollButton => m_Wrapper.m_Camera_MouseScrollButton;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @Scroll.started += instance.OnScroll;
            @Scroll.performed += instance.OnScroll;
            @Scroll.canceled += instance.OnScroll;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @MouseScrollButton.started += instance.OnMouseScrollButton;
            @MouseScrollButton.performed += instance.OnMouseScrollButton;
            @MouseScrollButton.canceled += instance.OnMouseScrollButton;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @Scroll.started -= instance.OnScroll;
            @Scroll.performed -= instance.OnScroll;
            @Scroll.canceled -= instance.OnScroll;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @MouseScrollButton.started -= instance.OnMouseScrollButton;
            @MouseScrollButton.performed -= instance.OnMouseScrollButton;
            @MouseScrollButton.canceled -= instance.OnMouseScrollButton;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Show_UI_Inventory;
    private readonly InputAction m_UI_Consumabar_GetKey1;
    private readonly InputAction m_UI_Consumabar_GetKey2;
    private readonly InputAction m_UI_Consumabar_GetKey3;
    private readonly InputAction m_UI_Consumabar_GetKey4;
    private readonly InputAction m_UI_Close_Popup_UI;
    private readonly InputAction m_UI_SkillBar_GetKeyQ;
    private readonly InputAction m_UI_SkillBar_GetKeyW;
    private readonly InputAction m_UI_SkillBar_GetKeyE;
    private readonly InputAction m_UI_SkillBar_GetKeyR;
    private readonly InputAction m_UI_ID_PW_Popup_TabKey;
    public struct UIActions
    {
        private @GameInputActions m_Wrapper;
        public UIActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Show_UI_Inventory => m_Wrapper.m_UI_Show_UI_Inventory;
        public InputAction @Consumabar_GetKey1 => m_Wrapper.m_UI_Consumabar_GetKey1;
        public InputAction @Consumabar_GetKey2 => m_Wrapper.m_UI_Consumabar_GetKey2;
        public InputAction @Consumabar_GetKey3 => m_Wrapper.m_UI_Consumabar_GetKey3;
        public InputAction @Consumabar_GetKey4 => m_Wrapper.m_UI_Consumabar_GetKey4;
        public InputAction @Close_Popup_UI => m_Wrapper.m_UI_Close_Popup_UI;
        public InputAction @SkillBar_GetKeyQ => m_Wrapper.m_UI_SkillBar_GetKeyQ;
        public InputAction @SkillBar_GetKeyW => m_Wrapper.m_UI_SkillBar_GetKeyW;
        public InputAction @SkillBar_GetKeyE => m_Wrapper.m_UI_SkillBar_GetKeyE;
        public InputAction @SkillBar_GetKeyR => m_Wrapper.m_UI_SkillBar_GetKeyR;
        public InputAction @ID_PW_Popup_TabKey => m_Wrapper.m_UI_ID_PW_Popup_TabKey;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Show_UI_Inventory.started += instance.OnShow_UI_Inventory;
            @Show_UI_Inventory.performed += instance.OnShow_UI_Inventory;
            @Show_UI_Inventory.canceled += instance.OnShow_UI_Inventory;
            @Consumabar_GetKey1.started += instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey1.performed += instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey1.canceled += instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey2.started += instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey2.performed += instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey2.canceled += instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey3.started += instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey3.performed += instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey3.canceled += instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey4.started += instance.OnConsumabar_GetKey4;
            @Consumabar_GetKey4.performed += instance.OnConsumabar_GetKey4;
            @Consumabar_GetKey4.canceled += instance.OnConsumabar_GetKey4;
            @Close_Popup_UI.started += instance.OnClose_Popup_UI;
            @Close_Popup_UI.performed += instance.OnClose_Popup_UI;
            @Close_Popup_UI.canceled += instance.OnClose_Popup_UI;
            @SkillBar_GetKeyQ.started += instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyQ.performed += instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyQ.canceled += instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyW.started += instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyW.performed += instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyW.canceled += instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyE.started += instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyE.performed += instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyE.canceled += instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyR.started += instance.OnSkillBar_GetKeyR;
            @SkillBar_GetKeyR.performed += instance.OnSkillBar_GetKeyR;
            @SkillBar_GetKeyR.canceled += instance.OnSkillBar_GetKeyR;
            @ID_PW_Popup_TabKey.started += instance.OnID_PW_Popup_TabKey;
            @ID_PW_Popup_TabKey.performed += instance.OnID_PW_Popup_TabKey;
            @ID_PW_Popup_TabKey.canceled += instance.OnID_PW_Popup_TabKey;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Show_UI_Inventory.started -= instance.OnShow_UI_Inventory;
            @Show_UI_Inventory.performed -= instance.OnShow_UI_Inventory;
            @Show_UI_Inventory.canceled -= instance.OnShow_UI_Inventory;
            @Consumabar_GetKey1.started -= instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey1.performed -= instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey1.canceled -= instance.OnConsumabar_GetKey1;
            @Consumabar_GetKey2.started -= instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey2.performed -= instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey2.canceled -= instance.OnConsumabar_GetKey2;
            @Consumabar_GetKey3.started -= instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey3.performed -= instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey3.canceled -= instance.OnConsumabar_GetKey3;
            @Consumabar_GetKey4.started -= instance.OnConsumabar_GetKey4;
            @Consumabar_GetKey4.performed -= instance.OnConsumabar_GetKey4;
            @Consumabar_GetKey4.canceled -= instance.OnConsumabar_GetKey4;
            @Close_Popup_UI.started -= instance.OnClose_Popup_UI;
            @Close_Popup_UI.performed -= instance.OnClose_Popup_UI;
            @Close_Popup_UI.canceled -= instance.OnClose_Popup_UI;
            @SkillBar_GetKeyQ.started -= instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyQ.performed -= instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyQ.canceled -= instance.OnSkillBar_GetKeyQ;
            @SkillBar_GetKeyW.started -= instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyW.performed -= instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyW.canceled -= instance.OnSkillBar_GetKeyW;
            @SkillBar_GetKeyE.started -= instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyE.performed -= instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyE.canceled -= instance.OnSkillBar_GetKeyE;
            @SkillBar_GetKeyR.started -= instance.OnSkillBar_GetKeyR;
            @SkillBar_GetKeyR.performed -= instance.OnSkillBar_GetKeyR;
            @SkillBar_GetKeyR.canceled -= instance.OnSkillBar_GetKeyR;
            @ID_PW_Popup_TabKey.started -= instance.OnID_PW_Popup_TabKey;
            @ID_PW_Popup_TabKey.performed -= instance.OnID_PW_Popup_TabKey;
            @ID_PW_Popup_TabKey.canceled -= instance.OnID_PW_Popup_TabKey;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnPointer(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnStop(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
    }
    public interface ICameraActions
    {
        void OnScroll(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnMouseScrollButton(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnShow_UI_Inventory(InputAction.CallbackContext context);
        void OnConsumabar_GetKey1(InputAction.CallbackContext context);
        void OnConsumabar_GetKey2(InputAction.CallbackContext context);
        void OnConsumabar_GetKey3(InputAction.CallbackContext context);
        void OnConsumabar_GetKey4(InputAction.CallbackContext context);
        void OnClose_Popup_UI(InputAction.CallbackContext context);
        void OnSkillBar_GetKeyQ(InputAction.CallbackContext context);
        void OnSkillBar_GetKeyW(InputAction.CallbackContext context);
        void OnSkillBar_GetKeyE(InputAction.CallbackContext context);
        void OnSkillBar_GetKeyR(InputAction.CallbackContext context);
        void OnID_PW_Popup_TabKey(InputAction.CallbackContext context);
    }
}
